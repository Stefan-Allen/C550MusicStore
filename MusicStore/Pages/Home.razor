@page "/Home"
@using MusicStore.Data
@using MusicStore.Schemas

@inject ProductService ProductServiceInstance;
@inject NavigationManager NavManager;
@inject UserService UserService;

<div class="topnav">
        <a class="active" href="/Home">Home</a>
        <a href="/Artists">Artists</a>
        <a href="/Basket">Basket</a>
        <a href="/Products">Products</a>
        <a href="/Profile">Profile</a>
        <a href="/Search">Search</a>
	<a href="/Checkout">Checkout</a>
	<a href="/Orders">Orders</a>
      </div>

<div class="container">
	<h2 class="section-title">Products</h2>
	<ul class="albums-list">
		@foreach(ProductSchema item in Products)
{
    <ProductView Item="@item"></ProductView>
}
	
	<div>
	<h2 class="section-title" style="margin-left: 10px";>Genre </h2>
	<ul class="albums-list">
		<li class="album-card -small">
			<img class="image" src="/th.jpg" alt="Genre" />
			<div class="album-info">
				<h3 class="name">Blues Music</h3>
				<p class="meta"></p>
				<p>
					<button class="btnbtnprimary" @onclick="@(() => {NavManager.NavigateTo("Genre/Blues");})" >
						Search for Blues Music
					</button>
				</p>
			</div>
		</li>
		
		<li class="album-card -small">
			<img class="image" src="/th.jpg" alt="Genre"/>
			<div class="album-info">
				<h3 class="name">Jazz Music</h3>
				<p class="meta"></p>
				<p>
					<button class="btnbtnprimary"@onclick="@(() => {NavManager.NavigateTo("Genre/Jazz");})" >
						Search for Jazz Music
					</button>
				</p>
			</div>
		</li>
	</ul>
<ul class="albums-list">
	<li class="album-card -small">
			<img class="image" src="/th.jpg" alt="Genre"/>
		<div class="album-info">
			<h3 class="name">Rock Music</h3>
			<p class="meta"></p>
			<p>
					<button class="btnbtnprimary" @onclick="@(() => {NavManager.NavigateTo("Genre/Rock");})">
						Search for Rock Music
				</button>
			</p>
		</div>
	</li>

	<li class="album-card -small">
			<img class="image" src="/th.jpg" alt="Genre" />
		<div class="album-info">
				<h3 class="name">Country Music</h3>
			<p class="meta"></p>
			<p>
					<button class="btnbtnprimary" @onclick="@(() => {NavManager.NavigateTo("Genre/Country");})">
						Search for Country Music
				</button>
			</p>
		</div>
	</li>
</ul>
<ul class="albums-list">
		<li class="album-card -small">
			<img class="image" src="/th.jpg" alt="Genre" />
			<div class="album-info">
				<h3 class="name">Dance Music</h3>
				<p class="meta"></p>
				<p>
					<button class="btnbtnprimary" @onclick="@(() => {NavManager.NavigateTo("Genre/Dance");})">
						Search for Dance Music
					</button>
				</p>
			</div>
		</li>
	
		<li class="album-card -small">
			<img class="image" src="/th.jpg" alt="Genre"/>
			<div class="album-info">
				<h3 class="name">Pop Music</h3>
				<p class="meta"></p>
				<p>
					<button class="btnbtnprimary" @onclick="@(() => {NavManager.NavigateTo("Genre/Pop");})">
						Search for Pop Music
					</button>
				</p>
			</div>
		</li>
	</ul>
<ul class="albums-list">
	<li class="album-card -small">
			<img class="image" src="/th.jpg" alt="Genre"/>
		<div class="album-info">
				<h3 class="name">Classical Music</h3>
			<p class="meta"></p>
			<p>
					<button class="btnbtnprimary" @onclick="@(() => {NavManager.NavigateTo("Genre/Classical");})">
						Search for Classical Music
				</button>
			</p>
		</div>
	</li>

	<li class="album-card -small">
			<img class="image" src="/th.jpg" alt="Genre" />
		<div class="album-info">
				<h3 class="name">Rap Music</h3>
			<p class="meta"></p>
			<p>
					<button class="btnbtnprimary" @onclick="@(() => {NavManager.NavigateTo("Genre/Rap");})">
						Search for Rap Music
				</button>
			</p>
		</div>
	</li>
</ul>
		</div>
	</ul>
</div>



@code {
	// Holds the products for this page
	private List<ProductSchema> Products { get; set; }

	// Runs on page load
	protected override void OnInitialized()
	{
	// If user is null means user is not autheticated so returns to login page using Navigation Manager
		if(UserService.User == null)
		{
			NavManager.NavigateTo("Login", true);
			return;
		}
		
		// Gets all products
		Products = ProductServiceInstance.GetProducts();
		
		// Runs Default OnInitialized
		base.OnInitialized();
	}

}
