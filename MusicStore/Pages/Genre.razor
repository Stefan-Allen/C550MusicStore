@page "/Genre/{genrestring}"
@using MusicStore.Data
@using MusicStore.Schemas

@inject ProductService ProductService
@inject UserService UserService;
@inject NavigationManager NavManager;

<div class="topnav">
    <a class="active" href="/Home">Home</a>
    <a href="/Artists">Artists</a>
    <a href="/Basket">Basket</a>
    <a href="/Products">Products</a>
    <a href="/Profile">Profile</a>
    <a href="/Search">Search</a>
    <a href="/Checkout">Checkout</a>
    <a href="/Orders">Orders</a>
    <div class="topnav">
        <div class="search-container">
            <div>
                <div>
                    <input type="text" name="text" class="search" placeholder="Search here!"  />
                    <input type="submit" name="submit" class="submit" value="Search" />
                </div>
            </div>
        </div>
    </div>
</div>



<div class="container">
    <h2 class="section-title">@GenreString</h2>
    <ul class="albums-list">
        @foreach (ProductSchema item in Products)
        {
            <ProductView Item="@item"></ProductView>
        }
    </ul>
</div>

@code {
    // Holds Genre Input From Link
   [Parameter]
   public string GenreString { get; set; }
    
   // Holds all the products in that genre
   private ProductSchema[] Products { get; set; }
   
    // Runs on page load
   protected override void OnInitialized()
   {
        // If user is null means user is not autheticated so returns to login page using Navigation Manager
        if (UserService.User == null)
        {
            NavManager.NavigateTo("Login");
            return;
        }
       
       // Uses the SearchByGenre Function to get products
       Products = ProductService.SearchByGenre(GenreString);

       // Runs default OnInitialized Function
       base.OnInitialized();
   }
}